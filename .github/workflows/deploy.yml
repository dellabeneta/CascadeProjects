name: Deploy to Production

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ghcr.io/${{ github.repository }}/backend:latest
      
      - name: Build and push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/${{ github.repository }}/frontend:latest
      
      - name: Deploy to Digital Ocean droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_PRIVATE_KEY }}
          script: |
            # Atualizar cÃ³digo
            cd /opt/python-peoples-crud
            git pull origin main
            
            # Criar/atualizar arquivo .env
            cat > .env << EOL
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            POSTGRES_DB=peoples
            POSTGRES_USER=postgres
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JWT_ALGORITHM=HS256
            JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
            ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
            ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
            BACKEND_CORS_ORIGINS=*
            EOL
            
            # Deploy com Docker Compose
            cd config
            docker compose pull
            docker compose down --remove-orphans
            docker compose up -d --force-recreate
            docker system prune -f