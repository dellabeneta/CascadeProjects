name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Digital Ocean
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_SSH_USER }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          # Debug: Mostrar informações do ambiente
          pwd
          whoami
          ls -la
          
          # Clonar ou atualizar repositório
          mkdir -p ~/python-peoples-crud
          cd ~/python-peoples-crud
          
          if [ ! -d .git ]; then
            git clone https://github.com/${{ github.repository }}.git .
          else
            git fetch --all
            git reset --hard origin/main
          fi
          
          # Debug: Mostrar conteúdo do docker-compose
          cat config/docker-compose.yml
          
          # Verificar instalação do Docker
          if ! command -v docker &> /dev/null; then
            echo "Docker não instalado"
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
          fi
          
          if ! command -v docker-compose &> /dev/null; then
            echo "Docker Compose não instalado"
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          # Debug: Mostrar versões
          docker --version
          docker-compose --version
          
          # Tentar deploy com variáveis de ambiente
          export POSTGRES_DB=${{ secrets.ENV_POSTGRES_DB }}
          export POSTGRES_USER=${{ secrets.ENV_POSTGRES_USER }}
          export POSTGRES_PASSWORD=${{ secrets.ENV_POSTGRES_PASSWORD }}
          export DATABASE_URL=${{ secrets.ENV_DATABASE_URL }}
          export JWT_SECRET_KEY=${{ secrets.ENV_JWT_SECRET_KEY }}
          
          # Mostrar variáveis exportadas
          env | grep POSTGRES
          env | grep JWT
          
          # Tentar deploy
          docker-compose -f config/docker-compose.yml down || true
          docker-compose -f config/docker-compose.yml up -d --build
          
          # Mostrar status e logs
          docker-compose -f config/docker-compose.yml ps
          docker-compose -f config/docker-compose.yml logs