name: Deploy to Production

on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DROPLET_SSH_PRIVATE_KEY }}
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H $DROPLET_HOST >> ~/.ssh/known_hosts

      - name: Copy Docker Compose file
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
          DROPLET_USER: ${{ secrets.DROPLET_USER }}
        run: |
          # Criar diretório de config no droplet
          ssh $DROPLET_USER@$DROPLET_HOST 'mkdir -p /opt/python-peoples-crud/config'
          # Copiar o arquivo docker-compose.yml
          scp config/docker-compose.yml $DROPLET_USER@$DROPLET_HOST:/opt/python-peoples-crud/config/

      - name: Create and Copy ENV file
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
          DROPLET_USER: ${{ secrets.DROPLET_USER }}
        run: |
          # Criar .env localmente
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "JWT_ALGORITHM=HS256" >> .env
          echo "JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30" >> .env
          echo "ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}" >> .env
          echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" >> .env
          echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> .env
          
          # Copiar .env para o droplet
          scp .env $DROPLET_USER@$DROPLET_HOST:/opt/python-peoples-crud/

      - name: Deploy Application
        env:
          DROPLET_HOST: ${{ secrets.DROPLET_HOST }}
          DROPLET_USER: ${{ secrets.DROPLET_USER }}
        run: |
          # Pull das novas imagens
          ssh $DROPLET_USER@$DROPLET_HOST "cd /opt/python-peoples-crud/config && docker compose pull"
          
          # Parar containers existentes
          ssh $DROPLET_USER@$DROPLET_HOST "cd /opt/python-peoples-crud/config && docker compose down --remove-orphans"
          
          # Recriar e iniciar containers
          ssh $DROPLET_USER@$DROPLET_HOST "cd /opt/python-peoples-crud/config && docker compose up -d --force-recreate"
          
          # Limpar imagens não utilizadas
          ssh $DROPLET_USER@$DROPLET_HOST "docker system prune -f"
          
          # Verificar status e logs
          ssh $DROPLET_USER@$DROPLET_HOST "cd /opt/python-peoples-crud/config && docker compose ps && docker compose logs --tail=50"